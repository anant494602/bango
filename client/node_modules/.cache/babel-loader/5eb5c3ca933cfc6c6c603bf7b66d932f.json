{"ast":null,"code":"import _objectSpread from \"/Users/anantkumar32/Desktop/bango-final/ecommerce-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/anantkumar32/Desktop/bango-final/ecommerce-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/anantkumar32/Desktop/bango-final/ecommerce-front/src/user/Profile.js\";\nimport React, { useState, useEffect } from 'react';\nimport Layout from '../core/Layout';\nimport { isAuthenticated } from '../auth';\nimport { Link, Redirect } from 'react-router-dom';\nimport { read, update, updateUser } from './apiUser';\nimport { useSelector } from 'react-redux';\nimport LeftPanelCustomerComponent from '../utils/LeftPanelCustomerComponent';\n\nconst Profile = ({\n  match\n}) => {\n  const _id = useSelector(state => state.SearchReducer.UserId);\n\n  const _useState = useState({\n    name: '',\n    email: '',\n    password: '',\n    error: false,\n    success: false\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        values = _useState2[0],\n        setValues = _useState2[1];\n\n  const _isAuthenticated = isAuthenticated(),\n        token = _isAuthenticated.token;\n\n  const name = values.name,\n        email = values.email,\n        password = values.password,\n        error = values.error,\n        success = values.success;\n\n  const init = userId => {\n    // console.log(userId);\n    read(userId, token).then(data => {\n      if (data.error) {\n        setValues(_objectSpread({}, values, {\n          error: true\n        }));\n      } else {\n        setValues(_objectSpread({}, values, {\n          name: data.name,\n          email: data.email\n        }));\n      }\n    });\n  };\n\n  useEffect(() => {\n    init(match.params.userId);\n  }, []);\n\n  const handleChange = name => e => {\n    setValues(_objectSpread({}, values, {\n      error: false,\n      [name]: e.target.value\n    }));\n  };\n\n  const clickSubmit = e => {\n    e.preventDefault();\n    update(match.params.userId, token, {\n      name,\n      email,\n      password\n    }).then(data => {\n      if (data.error) {\n        // console.log(data.error);\n        alert(data.error);\n      } else {\n        updateUser(data, () => {\n          setValues(_objectSpread({}, values, {\n            name: data.name,\n            email: data.email,\n            success: true\n          }));\n        });\n      }\n    });\n  };\n\n  const redirectUser = success => {\n    if (success) {\n      return React.createElement(Redirect, {\n        to: \"/cart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      });\n    }\n  };\n\n  const profileUpdate = (name, email, password) => React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Name\"), React.createElement(\"input\", {\n    type: \"text\",\n    onChange: handleChange('name'),\n    className: \"form-control\",\n    value: name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Email\"), React.createElement(\"input\", {\n    type: \"email\",\n    onChange: handleChange('email'),\n    className: \"form-control\",\n    value: email,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Password\"), React.createElement(\"input\", {\n    type: \"password\",\n    onChange: handleChange('password'),\n    className: \"form-control\",\n    value: password,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    onClick: clickSubmit,\n    className: \"btn btn-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"Submit\"));\n\n  return React.createElement(Layout, {\n    title: \"Profile\",\n    description: \"Update your profile\",\n    className: \"container-fluid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(LeftPanelCustomerComponent, {\n    user: _id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"col-9\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"mb-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"Profile update\"), profileUpdate(name, email, password), redirectUser(success))));\n};\n\nexport default Profile;","map":{"version":3,"sources":["/Users/anantkumar32/Desktop/bango-final/ecommerce-front/src/user/Profile.js"],"names":["React","useState","useEffect","Layout","isAuthenticated","Link","Redirect","read","update","updateUser","useSelector","LeftPanelCustomerComponent","Profile","match","_id","state","SearchReducer","UserId","name","email","password","error","success","values","setValues","token","init","userId","then","data","params","handleChange","e","target","value","clickSubmit","preventDefault","alert","redirectUser","profileUpdate"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Layout from '../core/Layout';\nimport { isAuthenticated } from '../auth';\nimport { Link, Redirect } from 'react-router-dom';\nimport { read, update, updateUser } from './apiUser';\nimport {useSelector} from 'react-redux';\nimport LeftPanelCustomerComponent from '../utils/LeftPanelCustomerComponent';\n\nconst Profile = ({ match }) => {\n    const _id = useSelector(state => state.SearchReducer.UserId)\n    const [values, setValues] = useState({\n        name: '',\n        email: '',\n        password: '',\n        error: false,\n        success: false\n    });\n\n    const { token } = isAuthenticated();\n    const { name, email, password, error, success } = values;\n\n    const init = userId => {\n        // console.log(userId);\n        read(userId, token).then(data => {\n            if (data.error) {\n                setValues({ ...values, error: true });\n            } else {\n                setValues({ ...values, name: data.name, email: data.email });\n            }\n        });\n    };\n\n    useEffect(() => {\n        init(match.params.userId);\n    }, []);\n\n    const handleChange = name => e => {\n        setValues({ ...values, error: false, [name]: e.target.value });\n    };\n\n    const clickSubmit = e => {\n        e.preventDefault();\n        update(match.params.userId, token, { name, email, password }).then(data => {\n            if (data.error) {\n                // console.log(data.error);\n                alert(data.error);\n            } else {\n                updateUser(data, () => {\n                    setValues({\n                        ...values,\n                        name: data.name,\n                        email: data.email,\n                        success: true\n                    });\n                });\n            }\n        });\n    };\n\n    const redirectUser = success => {\n        if (success) {\n            return <Redirect to=\"/cart\" />;\n        }\n    };\n\n    const profileUpdate = (name, email, password) => (\n        <form>\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Name</label>\n                <input type=\"text\" onChange={handleChange('name')} className=\"form-control\" value={name} />\n            </div>\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Email</label>\n                <input type=\"email\" onChange={handleChange('email')} className=\"form-control\" value={email} />\n            </div>\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Password</label>\n                <input type=\"password\" onChange={handleChange('password')} className=\"form-control\" value={password} />\n            </div>\n\n            <button onClick={clickSubmit} className=\"btn btn-primary\">\n                Submit\n            </button>\n        </form>\n    );\n\n    return (\n        <Layout title=\"Profile\" description=\"Update your profile\" className=\"container-fluid\">\n            <div className='row'>\n                <div className='col-3'>\n                <LeftPanelCustomerComponent user={_id}/>\n                </div>\n           \n                    <div className='col-9'>\n                            <h2 className=\"mb-4\">Profile update</h2>\n                            {profileUpdate(name, email, password)}\n                            {redirectUser(success)}\n                    </div>\n            </div>\n        </Layout>\n    );\n};\n\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}