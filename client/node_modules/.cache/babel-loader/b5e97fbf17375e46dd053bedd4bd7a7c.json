{"ast":null,"code":"import _slicedToArray from \"/Users/anantkumar32/Desktop/bango-final/ecommerce-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/anantkumar32/Desktop/bango-final/ecommerce-front/src/utils/GoogleMapComponent.js\";\nimport React from 'react';\nimport { GoogleMap, useJsApiLoader } from '@react-google-maps/api';\nconst containerStyle = {\n  width: '400px',\n  height: '400px'\n};\nconst center = {\n  lat: -3.745,\n  lng: -38.523\n};\n\nconst GoogleMapComponent = () => {\n  const _useJsApiLoader = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: \"YOUR_API_KEY\"\n  }),\n        isLoaded = _useJsApiLoader.isLoaded;\n\n  const _React$useState = React.useState(null),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        map = _React$useState2[0],\n        setMap = _React$useState2[1];\n\n  const onLoad = React.useCallback(function callback(map) {\n    const bounds = new window.google.maps.LatLngBounds();\n    map.fitBounds(bounds);\n    setMap(map);\n  }, []);\n  const onUnmount = React.useCallback(function callback(map) {\n    setMap(null);\n  }, []);\n  return isLoaded ? React.createElement(GoogleMap, {\n    mapContainerStyle: containerStyle,\n    center: center,\n    zoom: 10,\n    onLoad: onLoad,\n    onUnmount: onUnmount,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(React.Fragment, null)) : React.createElement(React.Fragment, null);\n};\n\nexport default React.memo(GoogleMapComponent);","map":{"version":3,"sources":["/Users/anantkumar32/Desktop/bango-final/ecommerce-front/src/utils/GoogleMapComponent.js"],"names":["React","GoogleMap","useJsApiLoader","containerStyle","width","height","center","lat","lng","GoogleMapComponent","id","googleMapsApiKey","isLoaded","useState","map","setMap","onLoad","useCallback","callback","bounds","window","google","maps","LatLngBounds","fitBounds","onUnmount","memo"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,cAApB,QAA0C,wBAA1C;AAEA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,KAAK,EAAE,OADc;AAErBC,EAAAA,MAAM,EAAE;AAFa,CAAvB;AAKA,MAAMC,MAAM,GAAG;AACbC,EAAAA,GAAG,EAAE,CAAC,KADO;AAEbC,EAAAA,GAAG,EAAE,CAAC;AAFO,CAAf;;AAKA,MAAMC,kBAAkB,GAAE,MAAI;AAAA,0BACLP,cAAc,CAAC;AAChCQ,IAAAA,EAAE,EAAE,mBAD4B;AAEhCC,IAAAA,gBAAgB,EAAE;AAFc,GAAD,CADT;AAAA,QAClBC,QADkB,mBAClBA,QADkB;;AAAA,0BAMFZ,KAAK,CAACa,QAAN,CAAe,IAAf,CANE;AAAA;AAAA,QAMjBC,GANiB;AAAA,QAMZC,MANY;;AAQxB,QAAMC,MAAM,GAAGhB,KAAK,CAACiB,WAAN,CAAkB,SAASC,QAAT,CAAkBJ,GAAlB,EAAuB;AACtD,UAAMK,MAAM,GAAG,IAAIC,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBC,YAAvB,EAAf;AACAT,IAAAA,GAAG,CAACU,SAAJ,CAAcL,MAAd;AACAJ,IAAAA,MAAM,CAACD,GAAD,CAAN;AACD,GAJc,EAIZ,EAJY,CAAf;AAMA,QAAMW,SAAS,GAAGzB,KAAK,CAACiB,WAAN,CAAkB,SAASC,QAAT,CAAkBJ,GAAlB,EAAuB;AACzDC,IAAAA,MAAM,CAAC,IAAD,CAAN;AACD,GAFiB,EAEf,EAFe,CAAlB;AAIA,SAAOH,QAAQ,GACX,oBAAC,SAAD;AACE,IAAA,iBAAiB,EAAET,cADrB;AAEE,IAAA,MAAM,EAAEG,MAFV;AAGE,IAAA,IAAI,EAAE,EAHR;AAIE,IAAA,MAAM,EAAEU,MAJV;AAKE,IAAA,SAAS,EAAES,SALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE,yCARF,CADW,GAWX,yCAXJ;AAYL,CA9BD;;AAgCA,eAAezB,KAAK,CAAC0B,IAAN,CAAWjB,kBAAX,CAAf","sourcesContent":["import React from 'react'\nimport { GoogleMap, useJsApiLoader } from '@react-google-maps/api';\n\nconst containerStyle = {\n  width: '400px',\n  height: '400px'\n};\n\nconst center = {\n  lat: -3.745,\n  lng: -38.523\n};\n\nconst GoogleMapComponent =()=>{\n    const { isLoaded } = useJsApiLoader({\n        id: 'google-map-script',\n        googleMapsApiKey: \"YOUR_API_KEY\"\n      })\n    \n      const [map, setMap] = React.useState(null)\n    \n      const onLoad = React.useCallback(function callback(map) {\n        const bounds = new window.google.maps.LatLngBounds();\n        map.fitBounds(bounds);\n        setMap(map)\n      }, [])\n    \n      const onUnmount = React.useCallback(function callback(map) {\n        setMap(null)\n      }, [])\n    \n      return isLoaded ? (\n          <GoogleMap\n            mapContainerStyle={containerStyle}\n            center={center}\n            zoom={10}\n            onLoad={onLoad}\n            onUnmount={onUnmount}\n          >\n            { /* Child components, such as markers, info windows, etc. */ }\n            <></>\n          </GoogleMap>\n      ) : <></>\n}\n\nexport default React.memo(GoogleMapComponent)"]},"metadata":{},"sourceType":"module"}